from Crypto.Util.number import *

n =  157153725635716773165746084891301795458778523594135132180326284472970003392857801978382891588990302348484025816328102054269838457817004174786359541783363894495962396766488861421052538255678374241965228501727476924333732511635299273117791167576050917379585926045124907232407789724525502516765599154137271677643
e =  65537
c =  121828504365576061878587514097036728706721737067604086922654258459892430201091448617639682547356251643488085514607057927453817623400920802843658573846852528973886640804452105899654716874757563414395547918975899743006225547625590879830532149554820926813702612474570081333643396478197190736253647648202376668163
p_plus_q =  25117109462673605038414781464235627968144573700902594460705192693534127981938463832316884364029387453394922525867057379402030374115656092600992571550562956

phiN = (n+1) - p_plus_q
d = inverse(e, phiN)
m = pow(c, d, n)

print(long_to_bytes(m).decode())